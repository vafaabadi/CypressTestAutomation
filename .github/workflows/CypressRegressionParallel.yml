name: Cypress Regression Parallel

on:
  push:
    branches:
      - '**'        # matches every branch
  pull_request:
  workflow_dispatch:
  schedule:
    # runs tests every day at 6pm
    - cron: '0 18 * * *'

jobs:
  install:
    runs-on: windows-latest
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: 'app'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Install dependencies
        working-directory: ./app
        run: npm install

      #      - name: Cypress install
      #        uses: cypress-io/github-action@v6

      - name: Compress
        working-directory: ./app
        run: Compress-Archive -Path ./* -Destination ./project.zip

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: project
          if-no-files-found: error
          path: app/project.zip

  cypress-run:
    runs-on: windows-latest
    needs: install

    strategy:
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: project
      #          path: app

      - name: Uncompress
        #        working-directory: ./app
        run: Expand-Archive ./project.zip -DestinationPath ./

      - name: Cypress install
        run: npx cypress 
          

      - name: Percy install
        run: npm install --save-dev @percy/cli @percy/cypress
        
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
#          group: 'Actions example'
          ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'


      - name: Cypress Regression Parallel
#        run: npx cypress run --browser chrome --headed --spec "cypress/integration/examples/**/*" --record --parallel --tag "node-${NODE}" --config "pageLoadTimeout=100000,requestTimeout=30000,defaultCommandTimeout=30000"
#        run: npx cypress-parallel -s cy:run -t 4 --specsDir 'cypress/integration/examples/BDD/*.feature'
#        run: npm run cy:run_spec -- --browser firefox --group Firefox & npm run cy:run_spec -- --browser chrome --group Chrome & npm run cy:run_spec -- --browser edge --group Edge
#        run: npx cypress run --browser firefox --group BrowserFirefox --headless --spec "cypress/integration/examples/BDD/*.feature" --record --config "pageLoadTimeout=100000,requestTimeout=30000,defaultCommandTimeout=30000"
        run: npx percy exec -- cypress run --browser chrome --group ParallelChrome --headless --spec "cypress/integration/examples/BDD/*.feature" --record --key process.env.CYPRESS_RECORD_KEY --config "pageLoadTimeout=100000,requestTimeout=30000,defaultCommandTimeout=30000"
          
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          # pass the Cypress Cloud record key as an environment variable
          CYPRESS_RECORD_KEY: a979428a-d58d-44e7-8a7b-954738a203b7
          # pass the project ID from the secrets through environment variable
          CYPRESS_PROJECT_ID: 9c692s
          # Get the short ref name of the branch that triggered the workflow run
          COMMIT_INFO_BRANCH: ${{ github.main }}
          # after the test run completes store videos and any screenshots
        continue-on-error: true

      - name: Prepare Cucumber HTML Report
        run: node cucumber-html-report.js
      - name: Upload screenshots & videos
        uses: actions/upload-artifact@v4
        # add the line below to store screenshots only on failures
        # if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
      - uses: actions/upload-artifact@v4
        with:
          name: Upload Cucumber HTML Report
          path: cypress/cucumberReports/cucumber-HTMLreport.html
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
